name: Check for Star

on:
  issues:
    types: [opened]
  issue_comment:
    types: [created]

jobs:
  check-star:
    runs-on: ubuntu-latest
    steps:
      - name: Check if user starred the repo
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const username = context.payload.sender.login;
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            // Пропускаем владельца репозитория
            if (username === owner) return;

            // GraphQL-запрос на получение 100 последних звёзд
            const query = `
              query($owner: String!, $repo: String!) {
                repository(owner: $owner, name: $repo) {
                  stargazers(first: 100, orderBy: {field: STARRED_AT, direction: DESC}) {
                    nodes {
                      login
                    }
                  }
                }
              }
            `;

            const result = await github.graphql(query, { owner, repo });

            const hasStarred = result.repository.stargazers.nodes.some(
              user => user.login.toLowerCase() === username.toLowerCase()
            );

            if (!hasStarred) {
              const issue_number = context.payload.issue?.number
                || context.payload.comment?.issue_url.split('/').pop();

              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number,
                body: `👋 Hey @${username}, glad you're using **${repo}**!
                      If the library has helped you — consider supporting the project with a ⭐ on GitHub. It helps with visibility and further development!

                      👉 https://github.com/${owner}/${repo}`
            });
            } else {
            console.log(`${username} has already starred the repo.`);
            }
